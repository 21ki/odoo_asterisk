---
- name: Create src dir
  file: path={{ asterisk_src_dir }} state=directory

- name: Remove old sources
  command:
    rm asterisk-{{ asterisk_version }}.tar.gz
    chdir={{ asterisk_src_dir }}
    removes=asterisk-{{ asterisk_version }}.gz
  tags: clean

- name: Install packages
  sudo: yes
  apt: name="{{ item }}" state=present
  with_items:
    - libncurses5-dev
    - build-essential
    - unixodbc
    - unixodbc-dev
    - odbc-postgresql
    - postgresql-server-dev-9.3
    - libnewt-dev
    - libxml2-dev
    - libcurl3
    - libcurl4-gnutls-dev
    - libsrtp0-dev
    - bison

- name: Download sources
  command:
    wget http://downloads.asterisk.org/pub/telephony/asterisk/asterisk-{{ asterisk_version }}.tar.gz
    chdir={{ asterisk_src_dir }}
    creates=asterisk-{{ asterisk_version }}.tar.gz

- name: Uncompress sources
  command:
    tar zxf  asterisk-{{ asterisk_version }}.tar.gz
    chdir={{ asterisk_src_dir }}

- name: Configure
  command: nice ./configure --prefix={{asterisk_prefix}}
          chdir={{ asterisk_src_dir }}/asterisk-{{ asterisk_version }}
  tags: configure

- name: Copy menuselect
  copy: src={{ item }} dest={{ asterisk_src_dir }}/asterisk-{{ asterisk_version }}/
  with_fileglob:
    - menuselect.make*
  tags: asterisk_update

- name: Make
  command: nice make chdir={{ asterisk_src_dir }}/asterisk-{{ asterisk_version }}
  tags: asterisk_update

- name: Install Asterisk
  sudo: yes
  command: nice make install chdir={{ asterisk_src_dir }}/asterisk-{{ asterisk_version }}
  tags: asterisk_update

- name: User & Group
  sudo: yes
  user: name={{asterisk_user}} home=/srv/asterisk shell=/bin/bash group={{asterisk_group}} state=present
  tags: post-install
  ignore_errors: yes

- name: Change owner
  sudo: yes
  command: chown -R {{asterisk_user}}.{{asterisk_group}} /srv/asterisk
  tags: post-install

- name: Set path
  sudo: yes
  sudo_user: "{{asterisk_user}}"
  lineinfile: dest=~/.bash_profile line='export PATH=~/sbin:$PATH'
              state=present create=yes
  tags: path

